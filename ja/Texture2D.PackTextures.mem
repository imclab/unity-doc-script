<signature>
PackTextures(Texture2D[],int,int,bool)
</signature>
テクスチャアトラスに複数のテクスチャをパックする
この関数により現在のテクスチャを指定されたテクスチャで作成されたアトラスで置き換えます。
任意のテクスチャの大きさ、形式およびミニマップはパッキングの後に変更できます。

結果として得られるテクスチャ アトラスは全ての入力のテクスチャを収めるのに必要な多きさとなりますが上限は各次元で /maximumAtlasSize/ が
最大となります。もし入力のテクスチャが希望するサイズのテクスチャ アトラスに収まらない場合、収まるように縮小されます。

全ての入力のテクスチャが DXT1 圧縮されていればアトラスは TextureFormat::pref::DXT1 形式となります。
もし全ての入力のテクスチャが TextureFormat::pref::DXT1 あるいは TextureFormat::pref::DXT5 形式で圧縮されていれば
アトラスは DXT5 形式となります。もしいずれかの入力のテクスチャが圧縮されてない場合、アトラスは
TextureFormat::pref::ARGB32 の非圧縮形式となります。

もし全ての入力のテクスチャがミニマップを持たない場合、アトラスもまたミニマップを持ちません。

もしゼロでないパディングを使用していてアトラスが圧縮されていて、ミニマップがある場合、低レベルのミニマップは
圧縮の制限により元のテクスチャと全く同じとならない場合があります。

もし /makeNoLongerReadable/ が /true/ の場合、テクスチャは読み取り不能としてマーキングされ、
メモリは GPU にアップロードした後に解放されます。
デフォルトで /makeNoLongerReadable/ は /false/ にセットされます。
CONVERTEXAMPLE
BEGIN EX
	// ソースとなるテクスチャ
	var atlasTextures: Texture2D[];

	// 個別のアトラス テクスチャのための Rect
	var rects: Rect[];

	function Start () {
		// 個別のテクスチャを出来るかぎり小さい空間にパッキングし、
		// 縁に 2 ピクセルのスペースを残す
		var atlas = new Texture2D(8192, 8192);
		rects = atlas.PackTextures(atlasTextures, 2, 8192);
	}
END EX
@param textures Array of textures to pack into the atlas.
@param padding テクスチャ間のパディングを設定する
@param maximumAtlasSize 取得できる画像の最大サイズ。デフォルトは2048
@param makeNoLongerReadable 解放してメモリとしてマークするかどうか。デフォル
トはfalse
@return 各々の入力テクスチャのアトラスにおける UV 座標を含む Rect 配列、またはパッキングが失敗した場合は null
