回転を表現するために使用されます。
コンパクトであり、ジンバル ロックの問題がなく、簡単に補間できます。
Unity は全ての回転を表現するのにクォータニオンを内部的に使用します。

しかし複雑な数字にもとづいており、直感的でない側面があります。
このため個別のクォータニオン成分 (x,y,z,w) をアクセスまたは修正することは殆どありません。
主に既存の回転（例． [[Transform]] など）にもとづき
新規の回転を作成します（例．二つの回転の間をスムーズに補間させる）。
使用する Quaternion 関数の 99% は以下です（他の関数は極めて稀な用途）
Quaternion.LookRotation, Quaternion.Angle, Quaternion.Euler, Quaternion.Slerp, Quaternion.FromToRotation, Quaternion.identity

Quaternion.operator * を使用してひとつの回転を別のものにより回転させる、またはベクトルを回転により回転させることが出来ます。
