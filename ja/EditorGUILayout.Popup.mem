<signature>
Popup(int,string[],GUILayoutOption[])
Popup(int,string[],GUIStyle,GUILayoutOption[])
Popup(int,GUIContent[],GUILayoutOption[])
Popup(int,GUIContent[],GUIStyle,GUILayoutOption[])
Popup(string,int,string[],GUILayoutOption[])
Popup(string,int,string[],GUIStyle,GUILayoutOption[])
Popup(GUIContent,int,GUIContent[],GUILayoutOption[])
Popup(GUIContent,int,GUIContent[],GUIStyle,GUILayoutOption[])
</signature>
ポップアップで表示されるセレクトボックスを作成します

{img EditorGUILayoutPopup.png}\\
BEGIN EX
	// ユーザがオプションの一覧の中から選択したプリミティブについて、インスタンスを作成します。

	class EditorGUILayoutPopup extends EditorWindow {
		var options : String[] = ["Cube", "Sphere", "Plane"];
		var index : int = 0;
		
		@MenuItem("Examples/Editor GUILayout Popup usage")
		static function Init() {
			var window = GetWindow(EditorGUILayoutPopup);
			window.Show();
		}
		function OnGUI() {
			index = EditorGUILayout.Popup(index, options);
			if(GUILayout.Button("作成"))
				InstantiatePrimitive();
		}
		function InstantiatePrimitive() {
			switch (index) {
				case 0:
					var cube : GameObject  = GameObject.CreatePrimitive(PrimitiveType.Cube);
	   				cube.transform.position = Vector3.zero;
	   				break;
				case 1:
					 var sphere : GameObject = GameObject.CreatePrimitive(PrimitiveType.Sphere);
					sphere.transform.position = Vector3.zero;
					break;
				case 2:
					var plane : GameObject = GameObject.CreatePrimitive(PrimitiveType.Plane);
					plane.transform.position = Vector3.zero;
					break;
				default:
					Debug.LogError("未知のオプションです。");
					break;
			}
		}
	}
END EX
@param label 左側に表示する文字列、テクスチャ、ツールチップ
@param selectedIndex 選択された項目のインデックス
@param displayedOptions ポップアップで表示される文字列、画像、ツールチップ
@param style スタイル
@param options 幅・高さ
SA: GUILayout::ref::Width, GUILayout::ref::Height, GUILayout::ref::MinWidth, GUILayout::ref::MaxWidth, GUILayout::ref::MinHeight, 
GUILayout::ref::MaxHeight, GUILayout::ref::ExpandWidth, GUILayout::ref::ExpandHeight.
@return ユーザが選択したオプションのインデックス。
