<signature>
Load(string)
</signature>
Resources フォルダの /path/ におけるフォルダのアセットをロードします。
もし /path/ にアセットが見つかった場合、そのアセットを戻り値とし、見つからない場合は Null を戻り値とします。
自身のプロジェクトにある Assets フォルダの中の任意の Resources フォルダに対して相対的な /path/ で指定され、拡張子は省く必要があります。
CONVERTEXAMPLE
BEGIN EX
	// Plane に "Assets/Resources/glass" という名前のテクスチャを割り当て

	function Start () {
		var go = new GameObject.CreatePrimitive(PrimitiveType.Plane);
		go.renderer.material.mainTexture = Resources.Load("glass") as Texture;
	}
END EX
もうひとつのサンプル
CONVERTEXAMPLE
BEGIN EX
	// "Assets/Resources/enemy" のパスへプレハブをインスタンス化

	function Start () {
		var instance : GameObject = Instantiate(Resources.Load("enemy"));
	}
END EX
<signature>
Load(string,Type)
</signature>
Resources フォルダの /path/ におけるフォルダのアセットをロードします。
もし /path/ にアセットが見つかった場合、そのアセットを戻り値とし、見つからない場合は Null を戻り値とします。
/type/ のオブジェクトのみを戻り値とします。
自身のプロジェクトにある Assets フォルダの中の任意の Resources フォルダに対して相対的な /path/ で指定され、拡張子は省く必要があります。
CONVERTEXAMPLE
BEGIN EX
	// Plane に "glass" という名前のテクスチャを割り当て

	function Start () {
		var go = new GameObject.CreatePrimitive(PrimitiveType.Cube);
		go.renderer.material.mainTexture = Resources.Load("glass", Texture2D);
	}
END EX
CONVERTEXAMPLE
BEGIN EX
	// 自身のプロジェクトの Assets フォルダにある
	// 任意の Resources で "enemy" という名前のプレハブをインスタンス化

	function Start () {
		var instance : GameObject = Instantiate(Resources.Load("enemy", GameObject));
	}
END EX
