<signature>
EnumPopup(Rect,Enum)
EnumPopup(Rect,string,Enum)
EnumPopup(Rect,GUIContent,Enum)
EnumPopup(Rect,Enum,GUIStyle)
EnumPopup(Rect,string,Enum,GUIStyle)
EnumPopup(Rect,GUIContent,Enum,GUIStyle)
</signature>
{img EditorGUIEnumPopup.png}\\
ポップアップで表示されるセレクトボックスを作成します
 Popupと少し違い、Enumを使用します
BEGIN EX
	// Shows info of a GameObject depending on the selected option

	enum OPTIONS {
		Position = 0,
		Rotation = 1,
		Scale = 2,
	}

	class EditorGUIEnumPopup extends EditorWindow {

		var display : OPTIONS = OPTIONS.Position;

		@MenuItem("Examples/Editor GUI Enum Popup usage")
		static function Init() {
			var window = GetWindow(EditorGUIEnumPopup);
			window.position = Rect(0, 0, 220, 80);
			window.Show();
		}
		
		function OnGUI() {
			var selectedObj : Transform = Selection.activeTransform;
			display = EditorGUI.EnumPopup(
				Rect(3,3,position.width - 6, 15),
				"Show:",
				display);
				EditorGUI.LabelField(Rect(0, 20, position.width,15),
					"Name:",
					selectedObj ? selectedObj.name : "Select an Object");
			if(selectedObj) {
				switch(display) {
					case OPTIONS.Position:
						EditorGUI.LabelField(Rect(0, 40, position.width,15),
							"Position:",
							selectedObj.position.ToString());
						break;
						
					case OPTIONS.Rotation:
						EditorGUI.LabelField(Rect(0, 40, position.width,15),
							"Rotation:",
							selectedObj.rotation.ToString());
						break;
					
					case OPTIONS.Scale:
						EditorGUI.LabelField(Rect(0, 40, position.width,15),
							"Scale:",
							selectedObj.localScale.ToString());
						break;
					
					default:
						Debug.LogError("Unrecognized Option");
						break;
				}
			}
			if(GUI.Button(Rect(3,position.height - 25, position.width - 6, 24),"Close"))
				this.Close();
		}
	}
END EX
@param position 表示位置
@param label 左側に表示する文字列
@param selected 選択されたEnum値
@param style スタイル
@return ユーザにより列挙体の中から選択されたオプション。
