<signature>
PlayScheduled(double)
</signature>
AudioSettings.dspTime が読み込みを行なう絶対的な時間軸において ::ref::clip を再生します。
これはオーディオクリップを連結するのに推奨される方法である。その理由はフレームレートから独立しいて、かつ、オーディオシステムにおいて突然の CPU スパイクを起こすことなく、オープニングやバッファリングに多くの時間（またはストリーム）を消費するメディアからフェッチして音声の再生を準備するだけの時間が十分となるためです。
CONVERTEXAMPLE
BEGIN EX
// プリロードおよび二つのオーディオクリップをサンプルにて正確に交互に連結しながら PlayScheduled 関数を使用するミュージックシステムの基本的なデモ
// このコードの前提としてミュージック曲が各々16小節（4 ビート/小節）かつ 140 ビート/秒と仮定します。
// 任意のクリップを連結させるためには、
//   nextEventTime += (60.0 / bpm) * numBeatsPerSegment 
// の箇所を次の行に変更します。
//   nextEventTime += clips[flip].length;

@script RequireComponent(AudioSource)

public var bpm = 140.0;
public var numBeatsPerSegment = 16;
public var clips = new AudioClip[2];

private var nextEventTime:double;
private var flip = 0;
private var audioSources = new AudioSource[2];
private var running = false;

function Start()
{
	for(var i = 0; i < 2; i++)
	{
		var child:GameObject = new GameObject("Player");
		child.transform.parent = gameObject.transform;
		audioSources[i] = child.AddComponent("AudioSource");
	}
	nextEventTime = AudioSettings.dspTime + 2.0;
	running = true;
}

function Update()
{
	if(!running)
		return;
	var time = AudioSettings.dspTime;
	if(time + 1.0 > nextEventTime)
	{
		// 音声が再生されるべき時間の約 1 秒前になっているため、指定時刻に再生できるようにシステムを準備しスケジューリングする。
		// これはストリームファイルのオープニング、バッファリングが関与する場合があるため、あらゆる最悪のケースを想定する必要がある。
		audioSources[flip].clip = clips[flip];
		audioSources[flip].PlayScheduled(nextEventTime);
		Debug.Log("Scheduled source " + flip + " to start at time " + nextEventTime);

		// 次のイベントはこの時点から16ビート後として140ビート/秒とする
		nextEventTime += (60.0 / bpm) * numBeatsPerSegment;

		// 二つのオーディオソースの間でフリップして片方のロードのプロセスがもう片方の再生を遮らないようにする
		flip = 1 - flip;
	}
}
END EX
AudioSource::ref::SetScheduledEndTime のサンプルにより二つのオーディオクリップをクリップ間でポップやクリックすることなく再生する方法を指名します。必要なアプローチはクリップがアタッチされた二つのオーディオソースを持ち、オーディオソースを使用してそれぞれのクリップを並ばせることです。

SA: AudioSource::pref::SetScheduledStartTime.
@param time 秒単位で絶対的な時間軸において AudioSettings.dspTime が音声の開始時間を示す時間
