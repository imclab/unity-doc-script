<signature>
OnPreviewGUI(Rect,GUIStyle)
</signature>
Implement to create your own custom preview for the preview area of the inspector, primary editor headers and the object selector.
If you implement ::ref::OnInteractivePreviewGUI then this will only be called for non-interactive custom previews.
The overidden method should use the rectangle passed in and render a preview of the asset into it.
The default implementation is a no-op.

__Note:__ Inspector previews are limited to the primary editor of persistent objects (assets), e.g., GameObjectInspector, MaterialEditor, TextureInspector.
This means that it is currently not possible for a component to have its own inspector preview.
BEGIN EX
using UnityEngine;
using UnityEditor;

public class GameObjectEditorWindow: EditorWindow {
    
    GameObject gameObject;
    Editor gameObjectEditor;
    
    [MenuItem("Window/GameObject Editor")]
    static void ShowWindow() {
        GetWindow<GameObjectEditorWindow>("GameObject Editor");    
    }
    
    void OnGUI() {
        gameObject = (GameObject) EditorGUILayout.ObjectField(gameObject, typeof(GameObject), true);
        
        if (gameObject != null) {
            if (gameObjectEditor == null)
                gameObjectEditor = Editor.CreateEditor(gameObject);
            
            gameObjectEditor.OnPreviewGUI(GUILayoutUtility.GetRect(500, 500), EditorStyles.whiteLabel);
        }
    }
}
END EX
SA: OnInteractivePreviewGUI.
@param r Rectangle in which to draw the preview.
@param background Background image.