<signature>
Highlight(string,string)
Highlight(string,string,HighlightSearchMode)
</signature>
Highlights an element in the editor.
This function will highlight the specified element in the specified window. If the element could not be found, the function returns false. If the element is inside a scrollview and is not currently visible, the scrollview will first automatically scroll to reveal the element and then highlight it.

Once the element is highlighted it will stay highlighted until either the Highlighter::ref::Stop function is called, or the element disappears from view. The element could disappear from view if the user scrolls away from it, the window is closed, the section of the GUI with the element in it is collapsed or otherwise hidden, or when starting or stopping Play Mode.

Most EditorGUI controls can be highlighted using their label as identifier.
CONVERTEXAMPLE
BEGIN EX
// Highlight the Scale property in the Inspector.
// This will work if a GameObject is selected and shown in the Inspector,
// provided that the Transform component is not collapsed.
Highlighter.Highlight ("Inspector", "Scale");
END EX
Any control that uses the [[SerializedProperty]] system can be highlighted using its SerializedProperty::ref::propertyPath.
CONVERTEXAMPLE
BEGIN EX
// Highlight the X component of the Scale property in the Inspector.
// This will work if a GameObject is selected and shown in the Inspector,
// provided that the Transform component is not collapsed.
Highlighter.Highlight ("Inspector", "m_LocalScale.x");

// If you have your own MonoBehaviour called MyBehaviour with a float called myFloat,
// you can highlight that control in the Inspector like this:
Highlighter.Highlight ("MyBehaviour", "myFloat");
END EX
Any element with text in it can be highlighted using that text as identifier, which is for example useful for buttons.
CONVERTEXAMPLE
BEGIN EX
// Highlight the Add Component button in the Inspector.
// This will work if a GameObject is selected and shown in the Inspector.
Highlighter.Highlight ("Inspector", "Add Component");

// Highlight the Create button in the Hierarchy view.
Highlighter.Highlight ("Hierarchy", "Create");
END EX
See the [[HighlightSearchMode]] enum for more details on identifying elements.

SA: Highlighter::ref::Stop, Highlighter::ref::HighlightIdentifier.
@param windowTitle The title of the window the element is inside.
@param text The text to identify the element with.
@param mode Optional mode to specify how to search for the element.
@return /true/ if the requested element was found; otherwise /false/.