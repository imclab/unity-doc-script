MenuItem 属性によりメインメニューおよびコンテキストメニューにメニューアイテムを追加できます。
MenuItem 属性は任意の static 関数をメニューコマンドに変更します。static 関数のみが MenuItem 属性を使用できます。

ホットキーを作成するため、次の特殊記号を使用できます:
: __%__ (Ctrl - Windowsの場合, Cmd - OS X の場合), __#__ (Shift), __&__ (Alt), <b>_</b> (キー修飾子なし)。
例えば Shift Alt G という ホットキーつきのメニューを作成するには <tt>"MyMenu/Do Something #&g"</tt> を使用します。G キーおよびキー修飾子なし、というホットキーつきのメニューを作成するには <tt>"MyMenu/Do Something _g"</tt> を使用します。
ホットキーのテキストはスペース文字列にで始まる必要があります（<tt>"MyMenu/Do_g"</tt> はホットキーとして認識されず、 <tt>"MyMenu/Do _g"</tt> は認識されます）。
BEGIN EX
// JavaScript サンプル:

// メニューバーに "Do Something" （何かする）というメニューアイテムを追加
@MenuItem ("MyMenu/Do Something")
static function DoSomething () {
	Debug.Log ("何かをしています...");
}

// チェックされたメニューアイテム
// メニューバーに"Log Selected Transform Name"（選択 Transform 名を記録）というメニューアイテムを追加
// 二つめの関数を使用してメニューアイテムをチェックして
// Transform 選択がされた場合のみ有効化されるようにする
@MenuItem ("MyMenu/Log Selected Transform Name")
static function LogSelectedTransformName () {
	Debug.Log ("選択 Transform は" + Selection.activeTransform.gameObject.name + "にあります。");
}

// 上記関数により定義されたメニューアイテムをチェック。
// この関数が false を戻した場合メニューアイテムは無効化される。
@MenuItem ("MyMenu/Log Selected Transform Name", true)
static function ValidateLogSelectedTransformName () {
	// もし Transform が選択されてない場合 false を戻す
	return Selection.activeTransform != null;
}

// メニューバーで "Do Something with a Shortcut Key" （ショートカットキーで何かします）というメニューアイテムを MyMenu に追加し、
// ショートカットキー(Ctrl-G - Windowsの場合, Cmd-G - OS Xの場合)を割り当てる
@MenuItem ("MyMenu/Do Something with a Shortcut Key %g")
static function DoSomethingWithAShortcutKey () {
	Debug.Log ("ショートカットキーで何かします...");
}

// Rigidbody のコンテキストメニューに "Double Mass" （倍の重さ）というメニューアイテムを追加
@MenuItem ("CONTEXT/Rigidbody/Double Mass")
static function DoubleMassFromContext (command : MenuCommand) {
	var body : Rigidbody = command.context;
	body.mass = body.mass * 2;
	Debug.Log ("Rigidbodyを倍の重さとして " + body.mass + " とコンテキストメニューから変更");
}
END EX
BEGIN EX NOCHECK
// C# サンプル:
using UnityEditor;
using UnityEngine;
public class MenuTest : MonoBehaviour {

// メニューバーに "Do Something" （何かする）というメニューアイテムを追加
	[MenuItem ("MyMenu/Do Something")]
	static void DoSomething () {
		Debug.Log ("何かをしています...");
	}

// チェックされたメニューアイテム
// メニューバーに"Log Selected Transform Name"（選択 Transform 名を記録）というメニューアイテムを追加
// 二つめの関数を使用してメニューアイテムをチェックして
// Transform 選択がされた場合のみ有効化されるようにする
	[MenuItem ("MyMenu/Log Selected Transform Name")]
	static void LogSelectedTransformName ()
	{
		Debug.Log ("選択 Transform は" + Selection.activeTransform.gameObject.name + "にあります。");
	}

// 上記関数により定義されたメニューアイテムをチェック。
// この関数が false を戻した場合メニューアイテムは無効化される。
	[MenuItem ("MyMenu/Log Selected Transform Name", true)]
	static bool ValidateLogSelectedTransformName () {
		// もし Transform が選択されてない場合 false を戻す
		return Selection.activeTransform != null;
	}

// メニューバーで "Do Something with a Shortcut Key" （ショートカットキーで何かします）というメニューアイテムを MyMenu に追加し、
// ショートカットキー(Ctrl-G - Windowsの場合, Cmd-G - OS Xの場合)を割り当てる
	[MenuItem ("MyMenu/Do Something with a Shortcut Key %g")]
	static void DoSomethingWithAShortcutKey () {
		Debug.Log ("ショートカットキーで何かします...");
	}

	// Rigidbody のコンテキストメニューに "Double Mass" （倍の重さ）というメニューアイテムを追加
	[MenuItem ("CONTEXT/Rigidbody/Double Mass")]
	static void DoubleMass (MenuCommand command) {
		Rigidbody body = (Rigidbody)command.context;
		body.mass = body.mass * 2;
		Debug.Log ("Rigidbodyを倍の重さとして " + body.mass + " とコンテキストメニューから変更");
	}
}
END EX