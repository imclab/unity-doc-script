The MenuItem attribute allows you to add menu items to the main menu and inspector context menus.
The MenuItem attribute turns any static function into a menu command. Only static functions can use the MenuItem attribute.

To create a hotkey you can use the following special characters: __%__ (ctrl on Windows, cmd on OS X), __#__ (shift), __&__ (alt), <b>_</b> (no key modifiers). For example to create a menu with hotkey shift-alt-g use <tt>"MyMenu/Do Something #&g"</tt>. To create a menu with hotkey __g__ and no key modifiers pressed use <tt>"MyMenu/Do Something _g"</tt>.

Some special keyboard keys are supported as hotkeys, for example "#LEFT" would map to shift-left. The keys supported like this are: LEFT, RIGHT, UP, DOWN, F1 .. F12, HOME, END, PGUP, PGDN.

A hotkey text must be preceded with a space character (<tt>"MyMenu/Do_g"</tt> won't be interpreted as hotkey, while <tt>"MyMenu/Do _g"</tt> will).
BEGIN EX
// JavaScript example:

// Add a menu item named "Do Something" to MyMenu in the menu bar.
@MenuItem ("MyMenu/Do Something")
static function DoSomething () {
	Debug.Log ("Doing Something...");
}


// Validated menu item.
// Add a menu item named "Log Selected Transform Name" to MyMenu in the menu bar.
// We use a second function to validate the menu item
// so it will only be enabled if we have a transform selected.
@MenuItem ("MyMenu/Log Selected Transform Name")
static function LogSelectedTransformName () {
	Debug.Log ("Selected Transform is on " + Selection.activeTransform.gameObject.name + ".");
}

// Validate the menu item defined by the function above.
// The menu item will be disabled if this function returns false.
@MenuItem ("MyMenu/Log Selected Transform Name", true)
static function ValidateLogSelectedTransformName () {
	// Return false if no transform is selected.
	return Selection.activeTransform != null;
}


// Add a menu item named "Do Something with a Shortcut Key" to MyMenu in the menu bar
// and give it a shortcut (ctrl-g on Windows, cmd-g on OS X).
@MenuItem ("MyMenu/Do Something with a Shortcut Key %g")
static function DoSomethingWithAShortcutKey () {
	Debug.Log ("Doing something with a Shortcut Key...");
}


// Add a menu item called "Double Mass" to a Rigidbody's context menu.
@MenuItem ("CONTEXT/Rigidbody/Double Mass")
static function DoubleMassFromContext (command : MenuCommand) {
	var body : Rigidbody = command.context;
	body.mass = body.mass * 2;
	Debug.Log ("Doubled Rigidbody's Mass to " + body.mass + " from Context Menu.");
}
END EX
BEGIN EX NOCHECK
// C# example:
using UnityEditor;
using UnityEngine;
public class MenuTest : MonoBehaviour {

	// Add a menu item named "Do Something" to MyMenu in the menu bar.
	[MenuItem ("MyMenu/Do Something")]
	static void DoSomething () {
		Debug.Log ("Doing Something...");
	}


	// Validated menu item.
	// Add a menu item named "Log Selected Transform Name" to MyMenu in the menu bar.
	// We use a second function to validate the menu item
	// so it will only be enabled if we have a transform selected.
	[MenuItem ("MyMenu/Log Selected Transform Name")]
	static void LogSelectedTransformName ()
	{
		Debug.Log ("Selected Transform is on " + Selection.activeTransform.gameObject.name + ".");
	}

	// Validate the menu item defined by the function above.
	// The menu item will be disabled if this function returns false.
	[MenuItem ("MyMenu/Log Selected Transform Name", true)]
	static bool ValidateLogSelectedTransformName () {
		// Return false if no transform is selected.
		return Selection.activeTransform != null;
	}


	// Add a menu item named "Do Something with a Shortcut Key" to MyMenu in the menu bar
	// and give it a shortcut (ctrl-g on Windows, cmd-g on OS X).
	[MenuItem ("MyMenu/Do Something with a Shortcut Key %g")]
	static void DoSomethingWithAShortcutKey () {
		Debug.Log ("Doing something with a Shortcut Key...");
	}

	// Add a menu item called "Double Mass" to a Rigidbody's context menu.
	[MenuItem ("CONTEXT/Rigidbody/Double Mass")]
	static void DoubleMass (MenuCommand command) {
		Rigidbody body = (Rigidbody)command.context;
		body.mass = body.mass * 2;
		Debug.Log ("Doubled Rigidbody's Mass to " + body.mass + " from Context Menu.");
	}
}
END EX