Editorのウィンドウを作成するクラスです


BEGIN EX
// JavaScript サンプル:
class MyWindow extends EditorWindow {
	var myString = "Hello World";
	var groupEnabled = false;
	var myBool = true;
	var myFloat = 1.23;

	// Window メニューに "My Window" という名前のメニュー追加
	@MenuItem ("Window/My Window")
	static function Init () {
		// 既存の開かれたウィンドウを取得、ない場合は新規作成:		
		var window = ScriptableObject.CreateInstance.<MyWindow>();
	}

	function OnGUI () {
		GUILayout.Label ("Base Settings", EditorStyles.boldLabel);
			myString = EditorGUILayout.TextField ("Text Field", myString);
		
		groupEnabled = EditorGUILayout.BeginToggleGroup ("Optional Settings", groupEnabled);
			myBool = EditorGUILayout.Toggle ("Toggle", myBool);
			myFloat = EditorGUILayout.Slider ("Slider", myFloat, -3, 3);
		EditorGUILayout.EndToggleGroup ();
	}
}
END EX
BEGIN EX NOCHECK
// C# サンプル:
using UnityEngine;
using UnityEditor;
public class MyWindow : EditorWindow {
	string myString = "Hello World";
	bool groupEnabled;
	bool myBool = true;
	float myFloat = 1.23f;

	// Window メニューに "My Window" という名前のメニュー追加
	[MenuItem ("Window/My Window")]
	static void Init () {
		// 既存の開かれたウィンドウを取得、ない場合は新規作成:		
		MyWindow window = (MyWindow)EditorWindow.GetWindow (typeof (MyWindow));
	}

	void OnGUI () {
		GUILayout.Label ("Base Settings", EditorStyles.boldLabel);
			myString = EditorGUILayout.TextField ("Text Field", myString);
		
		groupEnabled = EditorGUILayout.BeginToggleGroup ("Optional Settings", groupEnabled);
			myBool = EditorGUILayout.Toggle ("Toggle", myBool);
			myFloat = EditorGUILayout.Slider ("Slider", myFloat, -3, 3);
		EditorGUILayout.EndToggleGroup ();
	}
}
END EX
