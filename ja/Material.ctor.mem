<signature>
ctor(string)
</signature>
シェーダの source 文字列から一時的なマテリアルを作成します。
もしカスタムの特殊効果を実装するスクリプトがある場合、全てのグラフィックセットアップを実装するために シェーダおよびマテリアルを
使用します。この関数を使用して自身のスクリプトの中にカスタムシェーダおよびマテリアルを作成します。
このマテリアルを作成後、::ref::SetColor, ::ref::SetTexture, ::ref::SetFloat,
::ref::SetVector, ::ref::SetMatrix を使用してシェーダのプロパティの値を生成します。
BEGIN EX
	// 追加ブレンドのマテリアルを作成しレンダリングに使用します
	var color = Color.white;
	function Start () {
		var shaderText =
			"Shader \"Alpha Additive\" {" +
			"Properties { _Color (\"Main Color\", Color) = (1,1,1,0) }" +
			"SubShader {" +
			"	Tags { \"Queue\" = \"Transparent\" }" +
			"	Pass {" +
			"		Blend One One ZWrite Off ColorMask RGB" +
			"		Material { Diffuse [_Color] Ambient [_Color] }" +
			"		Lighting On" +
			"		SetTexture [_Dummy] { combine primary double, primary }" +
			"	}" +
			"}" +
			"}";
		renderer.material = new Material( shaderText );
		renderer.material.color = color;
	}
END EX
注意: マテリアルをこの方法で作成するときシンプルなシェーダのみ対応しています（固定関数）。もし
サーフェイス シェーダ、または頂点/ピクセルシェーダが必要である場合、エディタでシェーダ アセットを作成し、それを使用する必要があります。

SA: [[wiki:Shaders|ShaderLab ドキュメント]]
<signature>
ctor(Shader)
</signature>
[[Shader]] から一時的なマテリアルを作成します。
もしカスタムの特殊効果を実装するスクリプトがある場合、全てのグラフィックセットアップを実装するために シェーダおよびマテリアルを
使用します。この関数を使用して自身のスクリプトの中にカスタムシェーダおよびマテリアルを作成します。
このマテリアルを作成後、::ref::SetColor, ::ref::SetTexture, ::ref::SetFloat,
::ref::SetVector, ::ref::SetMatrix を使用してシェーダのプロパティの値を生成します。
BEGIN EX
	// シェーダおよびテクスチャの参照からマテリアルを作成します。
	var shader : Shader;
	var texture : Texture;
	var color : Color;
	function Start () {
		renderer.material = new Material (shader);
		renderer.material.mainTexture = texture;
		renderer.material.color = color;
	}
END EX
BEGIN EX
	// キューブを作成してビルトインの 鏡面(Specular)シェーダからマテリアルをアサインします。
	function Start () {
		var cube = GameObject.CreatePrimitive (PrimitiveType.Cube);
		cube.renderer.material = new Material (Shader.Find("Specular"));
	}
END EX
<signature>
ctor(Material)
</signature>
シェーダおよび /source/ マテリアルからシェーダおよび全てのプロパティから複製して一時的なマテリアルを作成します。
