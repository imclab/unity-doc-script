<signature>
DrawLine(Vector3,Vector3)
DrawLine(Vector3,Vector3,Color)
DrawLine(Vector3,Vector3,Color,float)
DrawLine(Vector3,Vector3,Color,float,bool)
</signature>
指定された開始地点および終了地点の間に線を描画
The line will be drawn in the scene view of the editor. If gizmo drawing is enabled in the game view, the line will also be drawn there. The /duration/ is the time (in seconds) for which the line will be visible after it is first displayed. A duration of zero shows the line for just one frame.

Note: This is for debugging playmode only. Editor gizmos should be drawn with Gizmos.Drawline or Handles.DrawLine instead.
CONVERTEXAMPLE
BEGIN EX
	// Frame update example: Draws a red line from the world-space origin to the point (1, 0, 0) for 1 frame.
	function Update () {
		Debug.DrawLine (Vector3.zero, Vector3 (1, 0, 0), Color.red);
	}
END EX
CONVERTEXAMPLE
BEGIN EX
	// Event callback example: Debug-draw all contact points and normals for 2 seconds.
	function OnCollisionEnter(collision : Collision) {
		for (var contact : ContactPoint in collision.contacts) {
			Debug.DrawLine(contact.point, contact.point + contact.normal, Color.green, 2, false);
		}
	}
END EX
@param start Point in world space where the line should start.
@param end Point in world space where the line should end.
@param color Color of the line.
@param duration How long the line should be visible for.
@param depthTest Should the line be obscured by objects closer to the camera?