<signature>
DrawRay(Vector3,Vector3)
DrawRay(Vector3,Vector3,Color)
DrawRay(Vector3,Vector3,Color,float)
DrawRay(Vector3,Vector3,Color,float,bool)
</signature>
ワールド座標にて /start/ （開始地点）から /start/ + /dir/ （開始地点＋方向）まで線を描画

If /depthTest/ is set to true then the line will be obscured by other objects in the scene that are nearer to the camera. 

The line will be drawn in the scene view of the editor. If gizmo drawing is enabled in the game view, the line will also be drawn there.
CONVERTEXAMPLE
BEGIN EX
	// Frame update example: Draws a 10 meter long green line from the position for 1 frame.
	function Update () {
		var forward : Vector3 = transform.TransformDirection(Vector3.forward) * 10;
		Debug.DrawRay (transform.position, forward, Color.green);
	}
END EX
CONVERTEXAMPLE
BEGIN EX
	
	// Event callback example: Debug-draw all contact points and normals for 2 seconds.
	function OnCollisionEnter(collision : Collision) {
		for (var contact : ContactPoint in collision.contacts) {
			Debug.DrawRay(contact.point, contact.normal, Color.green, 2, false);
		}
	}
END EX
@param start Point in world space where the ray should start.
@param dir Direction and length of the ray.
@param color Color of the drawn line.
@param duration How long the line will be visible for (in seconds).
@param depthTest Should the line be obscured by other objects closer to the camera?