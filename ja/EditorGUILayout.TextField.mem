<signature>
TextField(string,GUILayoutOption[])
TextField(string,GUIStyle,GUILayoutOption[])
TextField(string,string,GUILayoutOption[])
TextField(string,string,GUIStyle,GUILayoutOption[])
TextField(GUIContent,string,GUILayoutOption[])
TextField(GUIContent,string,GUIStyle,GUILayoutOption[])
</signature>
{img EditorGUILayoutTextField.png}\\
テキストフィールドを作成します
GUILayout.TextFieldとは少し違い、ラベルを表示することが出来ます
BEGIN EX
	// テキスト フィールド経由で選択されたオブジェクトの名前を自動的に変更します。

	class EditorGUILayoutTextField extends EditorWindow {	
		var objectName : String = "";
		@MenuItem("Examples/GUILayout TextField")
		static function Init() {
			var window = GetWindow(EditorGUILayoutTextField);
			window.Show();
		}
		function OnGUI() {
			GUILayout.Label("階層ビューでオブジェクトを選択します。");
			if(Selection.activeGameObject)
				Selection.activeGameObject.name = 
					EditorGUILayout.TextField("Object Name: ", Selection.activeGameObject.name);
			this.Repaint();
		}
	}
END EX
@param label 左側に表示する文字列、テクスチャ、ツールチップ
@param text 表示する文字列
@param style スタイル
@param options 幅・高さ
SA: GUILayout::ref::Width, GUILayout::ref::Height, GUILayout::ref::MinWidth, GUILayout::ref::MaxWidth, GUILayout::ref::MinHeight, 
GUILayout::ref::MaxHeight, GUILayout::ref::ExpandWidth, GUILayout::ref::ExpandHeight.
@return ユーザにより入力されたテキスト。
