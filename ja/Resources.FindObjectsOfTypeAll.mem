<signature>
FindObjectsOfTypeAll(Type)
</signature>
オブジェクトの型が /type/ である全てのオブジェクトの一覧を戻り値とします。
この関数はロードされた任意のタイプの、ゲームオブジェクト、プレハブ、マテリアル、メッシュ、テクスチャ、その他を含む Unity オブジェクトを戻り値とすることが可能です。さらに内部ファイルも一覧とするため、戻り値のオブジェクトをハンドリングするときは ''最大限に'' 注意して下さい。
Object::ref::FindObjectsOfType と異なり、この関数は無効化されたオブジェクトも一覧とします。

この関数は非常に遅く毎フレーム使用することは推奨されないことに留意して下さい。
CONVERTEXAMPLE
BEGIN EX
	// このスクリプトは割り当てされた Unity オブジェクトをタイプごとに表示します。
	// これはリークを見つけるのに便利です。リークしているオブジェクトの型
	// (メッシュ、テクスチャ、音声クリップ、ゲームオブジェクト）を知ることが最初のステップです。
	// そこから、その型の全てのリークしたアセットの名前を表示できます。

	function OnGUI () {
		GUILayout.Label("All " + Resources.FindObjectsOfTypeAll(typeof(UnityEngine.Object)).Length);
		GUILayout.Label("Textures " + Resources.FindObjectsOfTypeAll(typeof(Texture)).Length);
		GUILayout.Label("AudioClips " + Resources.FindObjectsOfTypeAll(typeof(AudioClip)).Length);
		GUILayout.Label("Meshes " + Resources.FindObjectsOfTypeAll(typeof(Mesh)).Length);
		GUILayout.Label("Materials " + Resources.FindObjectsOfTypeAll(typeof(Material)).Length);
		GUILayout.Label("GameObjects " + Resources.FindObjectsOfTypeAll(typeof(GameObject)).Length);
		GUILayout.Label("Components " + Resources.FindObjectsOfTypeAll(typeof(Component)).Length);
	}
END EX
BEGIN EX
import System.Collections.Generic;

// このスクリプトは、プレハブを除いて、シーンの全てのオブジェクトを見つけます。
function GetAllObjectsInScene(): List.<GameObject> {
    var objectsInScene: List.<GameObject> = new List.<GameObject>();
    
    for (var go: GameObject in Resources.FindObjectsOfTypeAll(typeof(GameObject)) as GameObject[]) {
        if (go.hideFlags == HideFlags.NotEditable || go.hideFlags == HideFlags.HideAndDontSave)
            continue;
        
        var assetPath: String = AssetDatabase.GetAssetPath(go.transform.root.gameObject);
        if (!String.IsNullOrEmpty(assetPath))
            continue;
        
        objectsInScene.Add(go);
    }
    
    return objectsInScene;
}
END EX
@param type 検索する際に一致させたいクラスの型
@return クラスが ''type'' である、または ''type'' から派生したクラスのオブジェクトの配列。
