<signature>
ctor(string)
</signature>
与えられた URL つきの WWW リクエストを作成します。
この関数は GET リクエストを作成し送信します。
ストリームは自動的にレスポンスのダウンロードを開始します。

ストリームが作成された後、完了するまで待機する必要があり、その後にダウンロードされたデータにアクセスできます。
便利なことにストリームは yield することが可能であるため、 Unity に完了するまで待機することを容易に指示することが出来ます。

__''注意:''__ URL は '%' エスケープが必要です。
CONVERTEXAMPLE
BEGIN EX
	// タイムスクエアで「Friday's」（の店舗）の最新のウェブカム画像を取得
	var url = "http://images.earthcam.com/ec_metros/ourcams/fridays.jpg";
	function Start () {
		 // 与えられた URL のダウンロードを開始
		var www : WWW = new WWW (url);

		// ダウンロードの完了を待機
		yield www;

		// テクスチャを割り当て
		renderer.material.mainTexture = www.texture;
	}
END EX
@param url ダウンロードする URL。 '%' でエスケープが必要です。
@return 新規の WWW オブジェクト。ダウンロードされたとき、結果は戻されたオブジェクトからフェッチできます。
<signature>
ctor(string,WWWForm)
</signature>
与えられた URL つきの WWW リクエストを作成します。
この関数は [[WWWForm]] 引数に含まれるデータから POST リクエストを作成および送信
します。これは @@new WWW(url,form.data, form.headers)@@ の呼び出しと同じ結果です。
ストリームはレスポンスを自動的にダウンロードの開始をします。
ストリームが作成された後、完了するまで待機する必要があり、その後にダウンロードされたデータにアクセスできます。
便利なことにストリームは yield することが可能であるため、 Unity に完了するまで待機することを容易に指示することが出来ます。

__''注意:''__ URL は '%' エスケープが必要です。
@param url ダウンロードする URL。 '%' でエスケープが必要です。
@param form POST するデータを含む [[WWWForm]] インスタンス。
@return 新規の WWW オブジェクト。ダウンロードされたとき、結果は戻されたオブジェクトからフェッチできます。
<signature>
ctor(string,byte[])
</signature>
与えられた URL つきの WWW リクエストを作成します。
この関数は、PostData に含まれる生の POST データから POST リクエストを作成および送信します。
ストリームはレスポンスを自動的にダウンロードの開始をします。
もしサーバーにカスタム形式で生の POST データを POST する必要がある場合、このタイプの関数を使用して下さい。

ストリームが作成された後、完了するまで待機する必要があり、その後にダウンロードされたデータにアクセスできます。
便利なことにストリームは yield することが可能であるため、 Unity に完了するまで待機することを容易に指示することが出来ます。

__''注意:''__ URL は '%' エスケープが必要です。
@param url ダウンロードする URL。 '%' でエスケープが必要です。
@param postData URL に POST すべきデータのバイト配列。
@return 新規の WWW オブジェクト。ダウンロードされたとき、結果は戻されたオブジェクトからフェッチできます。
<signature>
ctor(string,byte[],Hashtable)
</signature>
与えられた URL つきの WWW リクエストを作成します。
この関数は、PostData および /headers/ ハッシュテーブルにより提供されるカスタムのリクエストヘッダに含まれる生の POST データから POST リクエストを作成および送信します。
ストリームはレスポンスを自動的にダウンロードの開始をします。
もしサーバーにカスタム形式で生の POST データを POST する必要がある場合、あるいはカスタムのリクエストヘッダを提供する必要がある場合、このタイプの関数を使用して下さい。
ストリームが作成された後、完了するまで待機する必要があり、その後にダウンロードされたデータにアクセスできます。
便利なことにストリームは yield することが可能であるため、 Unity に完了するまで待機することを容易に指示することが出来ます。

__''注意:''__ URL は '%' エスケープが必要です。
@param url ダウンロードする URL。 '%' でエスケープが必要です。
@param postData URL に POST すべきデータのバイト配列。
@param headers リクエストとともに送信するカスタムヘッダのハッシュテーブル。
@return 新規の WWW オブジェクト。ダウンロードされたとき、結果は戻されたオブジェクトからフェッチできます。
