Lets you register undo operations on specific objects you are about to perform changes on.
The Undo system stores delta changes in the undo stack. Undo operations are automatically combined together based on events Eg. mouse down events will split undo groups.

Undo operations store either per property or per object state. This way they scale well with any scene size.
The most important operations are outlined below.

__Modifying a single property:__
BEGIN EX NOCHECK
Undo.RecordObject (myGameObject.light, "Set Light Range");
myGameObject.light.range = 5;
END EX
__Adding a component :__
BEGIN EX
Undo.AddComponent<RigidBody> (myGameObject);
END EX
__Creating a new game object:__
BEGIN EX NOCHECK
var go = new GameObject ();
Undo.RegisterCreatedObjectUndo (go, "Created go");
END EX
__Destroying a game object or component:__
BEGIN EX NOCHECK
Undo.DestroyObjectImmediate (myGameObject);
END EX
__Changing transform parenting:__
BEGIN EX NOCHECK
Undo.SetTransformParent (myGameObject.transform, newTransformParent);
END EX